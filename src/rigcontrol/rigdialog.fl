# data file for the Fltk User Interface Designer (fluid)
version 1.0107 
i18n_type 1
i18n_include "gettext.h"
i18n_function _
header_name {.h} 
code_name {.cxx}
decl {\#include <config.h>} {} 

decl {\#include <string>} {} 

decl {\#include <FL/Fl_Box.H>} {} 

decl {\#include "rigsupport.h"} {} 

decl {\#include "fl_digi.h"} {} 

decl {\#include "flmisc.h"} {} 

decl {using namespace std;} {} 

Function {rig_dialog()} {open
} {
  Fl_Window {} {
    label {Rig Controller} open selected
    xywh {667 300 560 80} type Double box DOWN_BOX
    code0 {\#include <stdlib.h>} visible
  } {
    Fl_Box FreqDisp {
      label 9
      xywh {4 31 253 44} box DOWN_BOX
      code0 {\#include "FreqControl.h"}
      code1 {extern int movFreq();}
      code2 {o->setCallBack(movFreq);}
      code3 {o->SetONOFFCOLOR( FL_RED, FL_BLACK);}
      class cFreqControl
    }
    Fl_Browser FreqSelect {
      callback {if (FreqSelect->value()) {
  switch (Fl::event_button()) {
  case FL_MIDDLE_MOUSE:
    delFreq();
    addFreq();
    break;
  case FL_LEFT_MOUSE: default:
    if (Fl::event_state() & FL_SHIFT)
      delFreq();
    else
      selectFreq();
    break;
  }
}}
      tooltip {Select operating mode and frequency
Middle click to replace, Shift-left click to delete} xywh {278 5 280 70} type Hold box DOWN_BOX labelfont 4 labelsize 12 textfont 4
    }
    Fl_Group opMODE {
      callback {setMode();} open
      xywh {69 5 96 20} box DOWN_BOX color 7
      code0 {\#include "combo.h"}
      class Fl_ComboBox
    } {}
    Fl_Group opBW {
      callback {setBW();} open
      xywh {170 5 85 20} box DOWN_BOX color 7
      code0 {\#include "combo.h"}
      class Fl_ComboBox
    } {}
    Fl_Button btnAddFreq {
      label {@|>}
      callback {addFreq();}
      tooltip {Add to list} xywh {257 5 20 20} box UP_BOX labelsize 10
    }
    Fl_Button btnDelFreq {
      label {@-11+}
      callback {delFreq();}
      tooltip {Delete from list} xywh {257 30 20 20} box UP_BOX labelsize 10
    }
    Fl_Button btnClearList {
      label {@-1square}
      callback {if (quick_choice("Clear list?", 2, "Confirm", "Cancel", NULL) == 1)
    clearList();}
      tooltip {Clear list} xywh {257 54 20 20} box UP_BOX labelsize 10
    }
    Fl_Button btnRCclose {
      label Close
      callback {closeRigDialog();}
      xywh {4 5 50 20} box UP_BOX 
      code0 {extern void closeRigDialog();}
    }
  }
  code {// Resizable kludge
// Move FreqSelect one pixel down so that we can define a box
// that will be used to resize this widget only. There has to be
// a better way of doing this...
{
FreqSelect->resize(FreqSelect->x(), FreqSelect->y() + 1, FreqSelect->w(), FreqSelect->h());
Fl_Box* b_ = new Fl_Box(FreqSelect->x() + FreqSelect->w() - 1, FreqSelect->y() + FreqSelect->h() - 1, 1, 1);
w->add_resizable(*b_);
// make the minimum width equal to that of the frequency display
w->size_range(FreqDisp->x() + FreqDisp->w(), w->h());
// get rid of the horizontal scrollbar, we will resize the window instead
FreqSelect->has_scrollbar(Fl_Browser_::VERTICAL);
}} {}
} 
