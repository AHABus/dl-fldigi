// generated by Fast Light User Interface Designer (fluid) version 1.0107

#include "PskSquelch.h"
#include "modem.h"

extern modem *active_modem;
static Fl_Double_Window *sqlDialog = 0;

Fl_Light_Button *btnSquelchOnOff=(Fl_Light_Button *)0;

static void cb_btnSquelchOnOff(Fl_Light_Button* o, void*) {
  active_modem->set_sqlchOnOff(o->value());
  wf->setSqlOnOff(o->value());
}

Fl_Light_Button *btnAfcOnOff=(Fl_Light_Button *)0;

static void cb_btnAfcOnOff(Fl_Light_Button* o, void*) {
  active_modem->set_afcOnOff(o->value());
  wf->setAfcOnOff(o->value());
}

Fl_Button *PskDialogDismiss=(Fl_Button *)0;

static void cb_PskDialogDismiss(Fl_Button*, void*) {
  sqlDialog->hide();
}

Fl_Slider *sldrSquelch=(Fl_Slider *)0;

static void cb_sldrSquelch(Fl_Slider* o, void*) {
  active_modem->set_squelch(o->value());
}

Fl_Progress *prgsSquelch=(Fl_Progress *)0;

Fl_Double_Window* PskSquelch_dialog() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = new Fl_Double_Window(295, 80, "Squelch Controls");
    w = o;
    { Fl_Light_Button* o = btnSquelchOnOff = new Fl_Light_Button(5, 55, 99, 20, "SQLOn/Off");
      o->value(1);
      o->callback((Fl_Callback*)cb_btnSquelchOnOff);
    }
    { Fl_Light_Button* o = btnAfcOnOff = new Fl_Light_Button(110, 55, 99, 20, "AFC On/Off");
      o->value(1);
      o->callback((Fl_Callback*)cb_btnAfcOnOff);
    }
    { Fl_Button* o = PskDialogDismiss = new Fl_Button(215, 55, 74, 20, "Dismiss");
      o->callback((Fl_Callback*)cb_PskDialogDismiss);
    }
    { Fl_Slider* o = sldrSquelch = new Fl_Slider(4, 36, 286, 15);
      o->type(5);
      o->maximum(100);
      o->step(1);
      o->value(20);
      o->callback((Fl_Callback*)cb_sldrSquelch);
    }
    { Fl_Progress* o = prgsSquelch = new Fl_Progress(4, 20, 286, 15, "Squelch Level");
      o->color(FL_INACTIVE_COLOR);
      o->align(FL_ALIGN_TOP);
    }
    o->end();
  }
  return w;
}

void createSquelchDialog() {
	if (!sqlDialog)
		sqlDialog = PskSquelch_dialog();
}

void openSquelchDialog() {
  if (!sqlDialog) sqlDialog = PskSquelch_dialog();
sldrSquelch->value(active_modem->get_squelch());
btnAfcOnOff->value(active_modem->get_afcOnOff());
btnSquelchOnOff->value(active_modem->get_sqlchOnOff());
sqlDialog->show();
}
